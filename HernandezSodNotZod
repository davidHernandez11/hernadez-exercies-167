//AUTHOR:DavidHernandez 
//COURSE:CPT167
//PURPOSE:This Program has Menus that have prompts in which you can input characters and numbers to get a receipt, a total and a report that shows you the selections you have made with arithmetics to give you a grand total of sorts.
//STARTDATE:February 17 2021

package edu.cpt167.hernandez.exercise6;

import java.util.Scanner;

//Start of Class
public class HernandezMainClass 
{

	//Constants
	
	public static final double TAX_RATE=.075;
	
	public static final String DISCOUNT_NAME_MEMBER="Member";
	public static final String DISCOUNT_NAME_SENIOR="Senior";
	public static final String DISCOUNT_NAME_NONE="No Discount";
	public static final String DISCOUNT_NAME_QUIT="Quit";
	
	public static final double DISCOUNT_RATE_MEMBER=0.15;
	public static final double DISCOUNT_RATE_SENIOR=0.25;
	public static final double DISCOUNT_RATE_NONE=0.0;
	
	public static final String ITEM_NAME_PREMIUM="Milk";
	public static final String ITEM_NAME_SPECIAL="Soda";
	public static final String ITEM_NAME_BASIC="Spam";
	public static final String ITEM_NAME_RETURN="Return to Main Menu";
	
	public static final double ITEM_PRICE_PREMIUM=55.95;
	public static final double ITEM_PRICE_SPECIAL=24.95;
	public static final double ITEM_PRICE_BASIC=15.95;
	public static final double RESET_VALUE=0;
	
	//End of Constants 
	
	
	public static void main(String[] args) 
	{
		
		Scanner input=new Scanner(System.in);
		
		//Variables
		
		String userName="";
		
		char rateSelection=' ';
		char itemSelection=' ';
		
		int howMany=0;
		
		String discountName="";
		double discountRate=0.0;
		
		String itemName="";
		double itemPrice=0.0;
		
		double discountAmount=0.0;
		double discountPrice=0.0;
		
		double subTotal=0.0;
		double tax=0.0;
		double totalCost=0.0;
		
		int memberCount=0;
		int seniorCount=0;
		int noDiscountCount=0;
		
		double grandTotal=0.0;
		
		int premiumCount=0;
		int specialCount=0;
		int basicCount=0;
		
		double purchaseAmt=0.0;
		
		//End of Variables 
		
		//Beginning of Main Method
		
		displayWelcomeBanner();
		
		userName = getUserName(input);
		
		rateSelection = validateMainMenu(input);
		
		//While != 'Q' Repetition Loop
		while (rateSelection != 'Q')
		{
			itemSelection = validateItemMenu(input);
			
			//While != 'R' Repetition Loop
			while (itemSelection != 'R')
			{
				howMany = validateHowMany(input);
				
				//Beginning of Selection Structures
				
				//Rate Selection Structure
				if (rateSelection == 'A')
				{
					discountName = DISCOUNT_NAME_MEMBER;
					discountRate = DISCOUNT_RATE_MEMBER;
					memberCount++;
				}
				else if (rateSelection == 'B')
				{
					discountName = DISCOUNT_NAME_SENIOR;
					discountRate = DISCOUNT_RATE_SENIOR;
					seniorCount++;
				}
				else 
				{
					discountName = DISCOUNT_NAME_NONE;
					discountRate = DISCOUNT_RATE_NONE;
					noDiscountCount++;
				}
				//End of Rate Selection Structure
				
				//Item Selection Structure
				if (itemSelection == 'A')
				{
					itemName = ITEM_NAME_PREMIUM;
					itemPrice = ITEM_PRICE_PREMIUM;
					premiumCount++;
				}
				else if (itemSelection == 'B')
				{
					itemName = ITEM_NAME_SPECIAL;
					itemPrice = ITEM_PRICE_SPECIAL;
					specialCount++;
				}
				else 
				{
					itemName = ITEM_NAME_BASIC;
					itemPrice = ITEM_PRICE_BASIC;
					basicCount++;
				}
				//End of Item Selection Structure
				
				//End of Selection Structures
				
				//Formulas
				discountAmount = itemPrice * discountRate;
				discountPrice = itemPrice - discountAmount;
				purchaseAmt = howMany * discountPrice;
				subTotal = subTotal + purchaseAmt;
				//End of Formulas
				
				displayItemReceipt(itemName, itemPrice, discountName, discountRate, discountAmount, discountPrice, howMany, purchaseAmt, subTotal);
				
				itemSelection = validateItemMenu(input);
			}//End of !='R' Repetition Loop
			
			//Formulas
			tax = subTotal * TAX_RATE;
			totalCost = subTotal + tax;
			grandTotal = grandTotal + totalCost;
			//End of Formulas
			
			displayOrderTotal (userName, subTotal, tax, totalCost);
			
			//Resets Value
			subTotal = RESET_VALUE;
			
			rateSelection = validateMainMenu(input);
		}//End of While !='Q' Repetition Loop
		
		if (grandTotal > 0)
		{
			displayFinalReport(memberCount, seniorCount, noDiscountCount, premiumCount, specialCount, basicCount, grandTotal);
		}
		displayFarewellMessage();
		
		//Close Scanner
		input.close();
	}//End of main method
	
	//Void Methods
	
	//Display Welcome Banner Method
	public static void displayWelcomeBanner()
	{
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("Welcome to the All in One program, this program");
		System.out.println("has Menus that have prompts in which you can input");
		System.out.println("characters and numbers to get a receipt, a total");
		System.out.println("and a report that shows you the selections you ");
		System.out.println("have made with arithmetics to give you a total.");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//End of Display Welcome Banner Method
	
	//Display Farewell Message Method
	public static void displayFarewellMessage()
	{
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("Thank you for using the All in One program.");
		System.out.println("HAVE A WONDERFUL DAY!");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//End of Display Farewell Message Method
	
	//Display Item Receipt
	public static void displayItemReceipt(String borrowedItemName, double borrowedItemPrice, String borrowedDiscountName, double borrowedDiscountRate, double borrowedDiscountAmount, double borrowedDiscountPrice, int borrowedHowMany, double borrowedPurchaseAmt, double borrowedSubTotal)
	{
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("ITEM REPORT");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.printf("%-7s%17s\n", "Item Name", borrowedItemName);
		System.out.printf("%-7s%9s%7.2f\n", "Original Price", "$", borrowedItemPrice);
		System.out.printf("%-7s%9s%1s\n", "Discount Type", "",borrowedDiscountName);
		System.out.printf("%-7s%16.1f%2s\n", "Discount Rate", borrowedDiscountRate * 100, "%");
		System.out.printf("%-7s%8s%7.2f\n", "Discount Amount", "$", borrowedDiscountAmount);
		System.out.printf("%-7s%7s%7.2f\n", "Discounted Price", "$", borrowedDiscountPrice);
		System.out.printf("%-7s%22d\n", "Quantity",borrowedHowMany);
		System.out.printf("%-7s%8s%7.2f\n", "Purchase Amount", "$", borrowedPurchaseAmt);
		System.out.printf("%-7s%15s%7.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//End of Display Item Receipt
	
	//Display Order Total Method
	public static void displayOrderTotal(String borrowedUserName, double borrowedSubTotal, double borrowedTax, double borrowedTotalCost)
	{
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("ORDER REPORT");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.printf("%-4s%21s\n", "User", borrowedUserName);
		System.out.printf("%-8s%15s%8.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.printf("%-3s%20s%8.2f\n", "Tax", "$", borrowedTax);
		System.out.printf("%-10s%13s%8.2f\n", "Total Cost", "$", borrowedTotalCost);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//End of Display Order Total Method
	
	
	//Display Final Report Method
	public static void displayFinalReport(int borrowedMemberCount, int borrowedSeniorCount, int borrowedNoDiscountCount, int borrowedPremiumCount, int borrowedSpecialCount, int borrowedBasicCount, double borrowedGrandTotal)
	{
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("FINAL REPORT");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("Count of discount types:");
		System.out.printf("%1s%1s%1s%21d\n", "[", DISCOUNT_NAME_MEMBER, "]", borrowedMemberCount);
		System.out.printf("%1s%1s%1s%21d\n", "[", DISCOUNT_NAME_SENIOR, "]", borrowedSeniorCount);
		System.out.printf("%1s%1s%1s%16d\n", "[", DISCOUNT_NAME_NONE, "]", borrowedNoDiscountCount);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("Count of item types:");
		System.out.printf("%1s%1s%1s%23d\n", "[", ITEM_NAME_PREMIUM, "]", borrowedPremiumCount);
		System.out.printf("%1s%1s%1s%23d\n", "[", ITEM_NAME_SPECIAL, "]", borrowedSpecialCount);
		System.out.printf("%1s%1s%1s%23d\n", "[", ITEM_NAME_BASIC, "]", borrowedBasicCount);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.printf("%1s%10s%8.2f\n", "Grand Total", "$", borrowedGrandTotal);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//End of Display Final Report Method
	
	//End of Void Methods
	
	//VR Methods
	
	//Get User Name Method
	public static String getUserName(Scanner borrowedInput)
	{
		String localUserName="";
		System.out.print("Enter User Name: ");
		localUserName=borrowedInput.nextLine();
		return localUserName;
	}//End of Get User Name Method
	
	//Validate Main Menu Selection Method
	public static char validateMainMenu(Scanner borrowedInput)
	{
		char localSelection=' ';
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("DISCOUNT MENU");
		System.out.printf("%-7s%1s%12.1f%1s\n", "[A] for ", DISCOUNT_NAME_MEMBER, DISCOUNT_RATE_MEMBER * 100, "%");
		System.out.printf("%-7s%1s%12.1f%1s\n", "[B] for ", DISCOUNT_NAME_SENIOR, DISCOUNT_RATE_SENIOR * 100, "%");
		System.out.printf("%-7s%1s%7.1f%1s\n", "[C] for ", DISCOUNT_NAME_NONE, DISCOUNT_RATE_NONE, "%");
		System.out.printf("%-7s%1s\n", "[Q] to ", DISCOUNT_NAME_QUIT);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.print("Enter your selection here: ");
		localSelection=borrowedInput.next().toUpperCase().charAt(0);
		
		while (localSelection!='A'&& localSelection!='B'&& localSelection!='C'&& localSelection!='Q')
		{//While Validate Main Menu Selection Repetition Loop with error message
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("DISCOUNT MENU");
			System.out.printf("%-7s%1s%12.1f%1s\n", "[A] for ", DISCOUNT_NAME_MEMBER, DISCOUNT_RATE_MEMBER * 100, "%");
			System.out.printf("%-7s%1s%12.1f%1s\n", "[B] for ", DISCOUNT_NAME_SENIOR, DISCOUNT_RATE_SENIOR * 100, "%");
			System.out.printf("%-7s%1s%7.1f%1s\n", "[C] for ", DISCOUNT_NAME_NONE, DISCOUNT_RATE_NONE, "%");
			System.out.printf("%-7s%1s\n", "[Q] to ", DISCOUNT_NAME_QUIT);
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.print("Enter your selection here: ");
			localSelection=borrowedInput.next().toUpperCase().charAt(0);
		}//End of While Validate Main Menu Selection Repetition Loop with error message
		return localSelection;
	}//End of Validate Main Menu Selection Method
	
	//Validate Item Menu Selection Selection Method
	public static char validateItemMenu(Scanner borrowedInput)
	{
		char localSelection=' ';
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("ITEM MENU");
		System.out.printf("%-7s%1s%11s%6.2f\n", "[A] for ", ITEM_NAME_PREMIUM, "$", ITEM_PRICE_PREMIUM);
		System.out.printf("%-7s%1s%11s%6.2f\n", "[B] for ", ITEM_NAME_SPECIAL, "$", ITEM_PRICE_SPECIAL);
		System.out.printf("%-7s%1s%11s%6.2f\n", "[C] for ", ITEM_NAME_BASIC, "$", ITEM_PRICE_BASIC);
		System.out.printf("%-7s%1s\n", "[R] to ", ITEM_NAME_RETURN);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.print("Enter your selection here: ");
		localSelection=borrowedInput.next().toUpperCase().charAt(0);
			
		while (localSelection!='A' && localSelection!='B' && localSelection!='C' && localSelection!='R' )
		{//Validate Item Menu Selection Repetition Loop With Error Message
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("ITEM MENU");
			System.out.printf("%-7s%1s%11s%6.2f\n", "[A] for ", ITEM_NAME_PREMIUM, "$", ITEM_PRICE_PREMIUM);
			System.out.printf("%-7s%1s%11s%6.2f\n", "[B] for ", ITEM_NAME_SPECIAL, "$", ITEM_PRICE_SPECIAL);
			System.out.printf("%-7s%1s%11s%6.2f\n", "[C] for ", ITEM_NAME_BASIC, "$", ITEM_PRICE_BASIC);
			System.out.printf("%-7s%1s\n", "[R] to ", ITEM_NAME_RETURN);
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.print("Enter your selection here: ");
				localSelection=borrowedInput.next().toUpperCase().charAt(0);
			}//End of Item Menu Selection Repetition Loop With Error Message
			return localSelection;
		}//End of Item Menu Selection Method
	
	//Validate How Many Method
	public static int validateHowMany(Scanner borrowedInput)
	{
		int localHowMany=0;
		System.out.print("Enter number of items: ");
		localHowMany=borrowedInput.nextInt();
		while (localHowMany<=0)
		{//Validate How Many Repetition loop With Error Message Method
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The value entered is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.print("Enter number of items: ");
				localHowMany=borrowedInput.nextInt();
		}//End of Validation How Many Repetition Loop with Error Message Method
		return localHowMany;
	}//End of Validate How Many Method
	
	//End of VR Methods
}//End of Class
